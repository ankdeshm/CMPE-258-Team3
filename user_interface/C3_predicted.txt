SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT name, country, age FROM singer ORDER BY age DESC;
SELECT singer.name, singer.country, singer.age FROM singer ORDER BY singer.age DESC;
SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France';
SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France';
SELECT name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer);
SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer);
SELECT DISTINCT country FROM singer WHERE age > 20;
SELECT DISTINCT country FROM singer WHERE age > 20;
SELECT singer.country, COUNT(singer.singer_id) AS singer_count FROM singer GROUP BY singer.country;
SELECT country, COUNT(*) FROM singer GROUP BY country;
SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)
SELECT singer.song_name FROM singer WHERE singer.age > (SELECT AVG(age) FROM singer);
SELECT stadium.location, stadium.name FROM stadium WHERE stadium.capacity BETWEEN 5000 AND 10000;
SELECT stadium.location, stadium.name FROM stadium WHERE stadium.capacity BETWEEN 5000 AND 10000;
SELECT MAX(capacity), AVG(capacity) FROM stadium;
SELECT avg(capacity), max(capacity) FROM stadium;
SELECT stadium.name, stadium.capacity FROM stadium ORDER BY stadium.average DESC LIMIT 1;
SELECT stadium.name, stadium.capacity FROM stadium WHERE stadium.highest = (SELECT MAX(highest) FROM stadium)
SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015;
SELECT COUNT(concert_id) FROM concert WHERE year IN (2014, 2015);
SELECT stadium.name, COUNT(concert.concert_id) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name;
SELECT stadium.name, count(concert.concert_id) AS num_concerts FROM stadium JOIN concert ON concert.stadium_id = stadium.stadium_id GROUP BY stadium.name;
SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON concert.stadium_id = stadium.stadium_id WHERE concert.year >= 2014 GROUP BY stadium.name, stadium.capacity ORDER BY COUNT(concert.concert_id) DESC LIMIT 1;
SELECT stadium.name, stadium.capacity FROM stadium WHERE stadium.stadium_id = ( SELECT concert.stadium_id FROM concert WHERE concert.year > 2013 GROUP BY concert.stadium_id ORDER BY COUNT(concert.concert_id) DESC LIMIT 1 );
SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DISTINCT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.concert_id IS NULL;
SELECT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.concert_id IS NULL;
SELECT country FROM singer WHERE age > 40 INTERSECT SELECT country FROM singer WHERE age < 30;
SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( SELECT concert.stadium_id FROM concert WHERE concert.year = 2014 );
SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( SELECT concert.stadium_id FROM concert WHERE concert.concert_id IN ( SELECT singer_in_concert.concert_id FROM singer_in_concert JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.theme = '2014' ) )
SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) as num_singers FROM concert INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_name, concert.theme;
SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS number_of_singers FROM concert INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_name, concert.theme;
SELECT singer.name, COUNT(singer_in_concert.singer_id) AS num_concerts FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name;
SELECT singer.name, COUNT(singer_in_concert.concert_id) FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name;
SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014;
SELECT singer.name FROM concert INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id INNER JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE concert.year = 2014;
SELECT singer.name, singer.country FROM singer WHERE singer.song_name LIKE '%Hey%';
SELECT singer.name, singer.country FROM singer WHERE song_name LIKE '%Hey%';
SELECT stadium.name, stadium.location FROM stadium INNER JOIN concert ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2014 OR concert.year = 2015 GROUP BY stadium.name, stadium.location HAVING COUNT(DISTINCT concert.year) = 2;
SELECT stadium.name, stadium.location FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT SELECT stadium.name, stadium.location FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015;
SELECT COUNT(*) FROM concert WHERE stadium_id = ( SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1 );
SELECT COUNT(concert.concert_id) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium);
SELECT COUNT(*) FROM pets WHERE weight > 10;
SELECT COUNT(*) FROM pets WHERE weight > 10;
SELECT weight FROM pets WHERE pettype = 'dog' ORDER BY pet_age ASC LIMIT 1;
SELECT MIN(weight) FROM pets WHERE pettype = 'dog' ORDER BY pet_age ASC LIMIT 1;
SELECT pettype, MAX(weight) FROM pets GROUP BY pettype;
SELECT pettype, MAX(weight) FROM pets GROUP BY pettype;
SELECT COUNT(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20;
SELECT COUNT(DISTINCT has_pet.petid) FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20;
SELECT COUNT(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F' AND pets.pettype = 'dog';
SELECT COUNT(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'female' AND pets.pettype = 'dog';
SELECT COUNT(DISTINCT pettype) FROM pets;
SELECT COUNT(DISTINCT pettype) FROM pets;
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog');
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' OR pets.pettype = 'dog';
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' INTERSECT SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog';
SELECT student.fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' INTERSECT SELECT student.fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog';
SELECT major, age FROM student WHERE stuid NOT IN ( SELECT stuid FROM has_pet INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' )
SELECT student.major, student.age FROM student WHERE student.stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat');
SELECT student.stuid FROM student WHERE student.stuid NOT IN (SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat');
SELECT student.stuid FROM student WHERE student.stuid NOT IN ( SELECT has_pet.stuid FROM has_pet INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' );
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' AND student.stuid NOT IN ( SELECT student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' );
SELECT student.fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat';
SELECT pettype, weight FROM pets WHERE pet_age = ( SELECT MIN(pet_age) FROM pets )
SELECT pets.pettype, pets.weight FROM pets WHERE pets.pet_age = (SELECT MIN(pets.pet_age) FROM pets);
SELECT pets.petid, pets.weight FROM pets WHERE pets.pet_age > 1;
SELECT pets.petid, pets.weight FROM pets WHERE pets.pet_age > 1;
SELECT pettype, AVG(pet_age), MAX(pet_age) FROM pets GROUP BY pettype;
SELECT pettype, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM pets GROUP BY pettype;
SELECT pettype, AVG(weight) FROM pets GROUP BY pettype;
SELECT pettype, AVG(weight) as average_weight FROM pets GROUP BY pettype;
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid;
SELECT fname, age FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid
SELECT pets.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith';
SELECT pets.petid FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith';
SELECT student.stuid, COUNT(pets.petid) FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid GROUP BY student.stuid;
SELECT student.stuid, COUNT(has_pet.petid) AS pet_count FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid;
SELECT student.fname, student.sex FROM student WHERE student.stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(*) > 1);
SELECT student.fname, student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.fname, student.sex HAVING COUNT(has_pet.petid) > 1
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' AND pets.pet_age = 3 LIMIT 1;
SELECT student.lname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = "cat" AND pets.pet_age = 3 LIMIT 1;
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet);
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT DISTINCT stuid FROM has_pet); 
SELECT COUNT(DISTINCT contid) AS num_continents FROM continents;
SELECT COUNT(*) FROM continents;
SELECT continents.contid, continents.continent, count(countries.countryname) as num_countries FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid, continents.continent;
SELECT continents.contid, continents.continent, COUNT(countries.countryid) FROM continents INNER JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid, continents.continent;
SELECT COUNT(DISTINCT countryid) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) as number_of_models FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname, car_makers.id;
SELECT car_makers.id, car_makers.fullname, COUNT(model_list.model) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.fullname;
SELECT model FROM model_list INNER JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY cars_data.horsepower LIMIT 1;
SELECT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight < (SELECT AVG(weight) FROM cars_data);
SELECT model_list.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model WHERE cars_data.weight < (SELECT AVG(weight) FROM cars_data);
SELECT cm.fullname FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id WHERE cd.year = 1970;
